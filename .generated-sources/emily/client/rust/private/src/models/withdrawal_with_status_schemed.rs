/*
 * emily-openapi-spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WithdrawalWithStatusSchemed : Workaround to make utopia generate openapi. Used only as last step before sending UpdateWithdrawalsResponse
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawalWithStatusSchemed {
    #[serde(
        rename = "error",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub error: Option<Option<String>>,
    #[serde(rename = "status")]
    pub status: u32,
    #[serde(
        rename = "withdrawal",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub withdrawal: Option<Option<Box<models::Withdrawal>>>,
}

impl WithdrawalWithStatusSchemed {
    /// Workaround to make utopia generate openapi. Used only as last step before sending UpdateWithdrawalsResponse
    pub fn new(status: u32) -> WithdrawalWithStatusSchemed {
        WithdrawalWithStatusSchemed {
            error: None,
            status,
            withdrawal: None,
        }
    }
}
